// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: akmHL7cLduyNG7qpZ1XTQy

import * as React from "react";
import { getActiveVariation } from "@plasmicapp/react-web/lib/splits";

type GetActiveVariationParams = Partial<
  Parameters<typeof getActiveVariation>[0]
>;

export interface PlasmicSplitsProviderProps extends GetActiveVariationParams {
  children?: React.ReactNode;
}

export const splits = [];

export function getGlobalContextValueFromVariation(
  groupId: string,
  variation: Record<string, string>
) {
  let groupValue: string | undefined = undefined;
  Object.keys(variation).forEach((variationKey: string) => {
    const [_type, splitId] = variationKey.split(".");
    const sliceId = variation[variationKey];
    const split = splits.find(
      s => s.id === splitId || s.externalId === splitId
    );
    if (split) {
      const slice = split.slices.find(
        s => s.id === sliceId || s.externalId === sliceId
      );
      if (slice) {
        const content = slice.contents.find(c => c.groupId === groupId);
        if (content) {
          groupValue = content.variant;
        }
      }
    }
  });
  return groupValue;
}

export default function PlasmicSplitsProvider(
  props: PlasmicSplitsProviderProps
) {
  const { children, traits, ...rest } = props;
  const variation = getActiveVariation({
    splits,
    traits: traits ?? {},
    ...rest
  });

  return <>{children}</>;
}
